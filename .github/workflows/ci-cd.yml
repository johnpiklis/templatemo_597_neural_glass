name: Build & Deploy to ECR (GitOps)

on:
  push:
    branches:
      - main

env:
  ECR_REPOSITORY: neural-glass
  AWS_REGION: us-east-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # required to commit changed manifests back
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set image vars
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "IMAGE_URI=$ECR_REGISTRY/${ECR_REPOSITORY}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_URI .

      - name: Push to ECR
        run: |
          docker push $IMAGE_URI

      - name: Update k8s deployment image
        run: |
          # replace placeholder with new image URI
          git config user.name "${{ secrets.GITHUB_NAME }}"
          git config user.email "${{ secrets.GITHUB_EMAIL }}"
          sed -i "s|IMAGE_PLACEHOLDER|${IMAGE_URI}|g" k8s/deployment.yaml
          git add k8s/deployment.yaml
          git commit -m "ci: deploy image ${IMAGE_URI}" || echo "no changes to commit"
          git push origin HEAD:main

      - name: Display resulting image
        run: echo "Pushed ${IMAGE_URI}"
